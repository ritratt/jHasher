
import com.twmacinta.util.MD5;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Hasher.java
 *
 * Created on Apr 26, 2012, 5:20:00 PM
 */
/**
 *
 * @author nbknlhw
 */
public class Hasher extends javax.swing.JFrame {

    /** Creates new form Hasher */
    private JFileChooser browse = new JFileChooser();
    private File file;
    private String hash="";
    String path_absolute;
    
   
    public Hasher() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        browse_button = new javax.swing.JButton();
        hash_button = new javax.swing.JButton();
        hash_input = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        result = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Indicator = new javax.swing.JLabel();
        hash_calculated = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hasher");
        setResizable(false);

        browse_button.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        browse_button.setText("Browse");
        browse_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse_buttonActionPerformed(evt);
            }
        });

        hash_button.setFont(new java.awt.Font("Calibri", 0, 36));
        hash_button.setText("Hash");
        hash_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hash_buttonActionPerformed(evt);
            }
        });

        hash_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hash_inputActionPerformed(evt);
            }
        });

        jLabel1.setText("Input hash from website/source below:");

        result.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        result.setText("                                        Waiting for input...");
        result.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36));
        jLabel2.setText("Hasher");

        Indicator.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Indicator.setText(" ");
        Indicator.setFocusable(false);

        jLabel3.setText("Calculated hash will appear below:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(223, 223, 223))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(browse_button, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                .add(42, 42, 42)
                                .add(Indicator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(43, 43, 43)
                                .add(hash_button, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, hash_input, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, result, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel1))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(hash_calculated, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(412, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(hash_button, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(browse_button, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .add(Indicator, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .add(28, 28, 28)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(hash_input, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(22, 22, 22)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(hash_calculated, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(97, 97, 97)
                .add(result)
                .add(37, 37, 37)
                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browse_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browse_buttonActionPerformed
        // TODO add your handling code here:
        browse.setFileSelectionMode(JFileChooser.FILES_ONLY);
        browse.showDialog(browse_button, "Choose File");
        file = browse.getSelectedFile();
        path_absolute=file.getAbsolutePath();
        Indicator.setText("Click Hash Button!");
        
    }//GEN-LAST:event_browse_buttonActionPerformed

    private void hash_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hash_buttonActionPerformed
        try {
            hash = MD5.asHex(MD5.getHash(new File(path_absolute)));
        } catch (IOException ex) {
            Logger.getLogger(Hasher.class.getName()).log(Level.SEVERE, null, ex);
        }
        hash_calculated.setText(hash);
        if (hash.equals(hash_input.getText()))
            result.setText("Hashes MATCH!");
        else
            result.setText("Hashes DO NOT MATCH!");
 
    }//GEN-LAST:event_hash_buttonActionPerformed

    private void hash_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hash_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hash_inputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Hasher().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Indicator;
    private javax.swing.JButton browse_button;
    private javax.swing.JButton hash_button;
    private javax.swing.JTextField hash_calculated;
    private javax.swing.JTextField hash_input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel result;
    // End of variables declaration//GEN-END:variables
}
